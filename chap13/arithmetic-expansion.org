* arithmetic expansion
** variations

#+BEGIN_EXAMPLE
z=0
# arithmetic expansion with backticks
z=`expr $z + 3`          # The 'expr' command performs the expansion.
# arithmetic expansion with double parentheses
z=$(($z+3))
z=$((z+3))                                  #  Also correct.
                                            #  Within double parentheses,
                                            #+ parameter dereferencing
                                            #+ is optional.

# $((EXPRESSION)) is arithmetic expansion.  #  Not to be confused with
                                            #+ command substitution.

# You may also use operations within double parentheses without assignment.

  n=0
  echo "n = $n"                             # n = 0

  (( n += 1 ))                              # Increment.
# (( $n += 1 )) is incorrect!
  echo "n = $n"                             # n = 1

# arithmetic expansion using let

let z=z+3
echo $z       # 3

let "z += 3"  #  Quotes permit the use of spaces in variable assignment.
              #  The 'let' operator actually performs arithmetic evaluation,
              #+ rather than expansion.

echo $z       # 6

z+=3
echo $z       # 63

(( z += 1 ))
echo $z       # 64
#+END_EXAMPLE
